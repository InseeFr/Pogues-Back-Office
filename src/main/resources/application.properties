# Properties file
app.propDir=file:${catalina.base}/webapps


# SSL: old properties, add to be false now
fr.insee.pogues.force.ssl=false

# Swagger
fr.insee.pogues.api.host=localhost:8080
fr.insee.pogues.api.name=
fr.insee.pogues.api.scheme=http

# CORS filter: empty means no CORS allowed, use * to allow all origins (not recommended)
fr.insee.pogues.cors.allowedOrigin=

# Database
fr.insee.pogues.persistence.database.host=
fr.insee.pogues.persistence.database.port=
fr.insee.pogues.persistence.database.schema=
fr.insee.pogues.persistence.database.user=
fr.insee.pogues.persistence.database.password=
fr.insee.pogues.persistence.database.table=pogues
fr.insee.pogues.persistence.database.driver=org.postgresql.Driver

spring.datasource.url=jdbc:postgresql://${fr.insee.pogues.persistence.database.host}:${fr.insee.pogues.persistence.database.port}/${fr.insee.pogues.persistence.database.schema}
spring.datasource.username=${fr.insee.pogues.persistence.database.user}
spring.datasource.password=${fr.insee.pogues.persistence.database.password}
# Max pool size is 8 normally but to leave room to DDI-Access-services we put 4
spring.datasource.hikari.minimum-idle=4
spring.datasource.hikari.maximum-pool-size=4

# Protected stamp: only members associated with this stamp can edit questionnaires that belong to it
fr.insee.pogues.stamp.restricted=DG75-L120

# Role (actually not used)
fr.insee.pogues.role.admin=Administrateur_Pogues
fr.insee.pogues.role.user=Utilisateurs_Pogues

######### External services #########
# DDI-AS: mock of RMeS
# See source code: https://github.com/InseeFr/DDI-Access-Services
fr.insee.pogues.api.remote.metadata.url=

# Stromae-V1 database: for visualization based on eXist (document-oriented database with included web-services)
# See source code: https://github.com/InseeFr/Stromae-db
fr.insee.pogues.api.remote.stromae.host=
# Path in exist collection
fr.insee.pogues.api.remote.stromae.vis.path=
# Stromae-V1 front-end: for visualization based on form-runner (xml/java) with xforms questionnaire
# See source code: https://github.com/InseeFr/Stromae/tree/main
fr.insee.pogues.api.remote.stromae.orbeon.host=

# Visu for interviewer mode
# See source code: https://github.com/InseeFr/Drama-Queen
fr.insee.pogues.api.remote.queen.vis.host=
fr.insee.pogues.api.remote.queen.vis.path=
fr.insee.pogues.api.remote.queen.vis.queryparams.questionnaire=
fr.insee.pogues.api.remote.queen.vis.queryparams.nomenclatures=

# Stromae-V2/V3, front-end for visualization based on Lunatic (JS library) with lunatic-json questionnaire
# V3: DSFR implementation, https://www.systeme-de-design.gouv.fr
# See source code for v2: https://github.com/InseeFr/Stromae/tree/v2-master
fr.insee.pogues.api.remote.stromaev2.vis.host=
fr.insee.pogues.api.remote.stromaev2.vis.path=
fr.insee.pogues.api.remote.stromaev2.vis.queryparams.questionnaire=
fr.insee.pogues.api.remote.stromaev2.vis.queryparams.nomenclatures=
# See source code for v3: https://github.com/InseeFr/Stromae/tree/main
fr.insee.pogues.api.remote.stromaev3.vis.host=
fr.insee.pogues.api.remote.stromaev3.vis.path=
fr.insee.pogues.api.remote.stromaev3.vis.queryparams.questionnaire=
fr.insee.pogues.api.remote.stromaev3.vis.queryparams.nomenclatures=

# Eno: questionnaire generator
# See source code: https://github.com/InseeFr/Eno
fr.insee.pogues.api.remote.eno.host=
fr.insee.pogues.api.remote.eno.scheme=

# Nomenclatures API: actually, nomenclatures used in suggester are stored in PostegreSQL DB (not the pogues one), served by a API
# See source code: https://github.com/InseeFr/Queen-Back-Office
fr.insee.pogues.api.remote.api.nomenclatures=

################################

######### Authentication #########

# Use OIDC for open-id connect, authentication is disabled with any other value
fr.insee.pogues.authentication=NONE
fr.insee.pogues.auth.server-url=
fr.insee.pogues.auth.realm=
# resource is only use for swagger to be enabled to authenticate
fr.insee.pogues.auth.resource=

spring.security.oauth2.resourceserver.jwt.issuer-uri=${fr.insee.pogues.auth.server-url}/realms/${fr.insee.pogues.auth.realm}
# JWT, to read value inside jwt token
jwt.stamp-claim=timbre
jwt.username-claim=name

################################


############### Additional props ################

spring.application.name=Pogues-Back-Office
server.port=8080

# Put time out on async requests to 5 minutes (default 30s is too few for visualization of BIG questionnaires)
spring.mvc.async.request-timeout=300000

# Swagger
springdoc.swagger-ui.disable-swagger-default-url = true
springdoc.swagger-ui.filter = true

# Config Swagger (only for display)
fr.insee.pogues.model.version=@pogues-model.version@
fr.insee.pogues.version=@project.version@

#Logging configuration
logging.file.path=D:/logs

# Temporary dir to "deploy" static resources for FOP generation from pdf directory in asset
fr.insee.pogues.pdf.temp.dir=${java.io.tmpdir:/tmp}/pogues/static/pdf