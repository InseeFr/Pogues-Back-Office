{
  "owner": "FAKEPERMISSION",
  "FlowControl": [
    {
      "Description": "",
      "Expression": "$LIEUXPARENTS$ = \"2\"",
      "id": "l0mlornn",
      "IfTrue": "l0mkvlv9-l0mkvlv9"
    },
    {
      "Description": "PRENOM est né en France",
      "Expression": "$LNAIS$ = \"1\"",
      "id": "l125uwz4",
      "IfTrue": "l1265ml0-l1265ml0"
    },
    {
      "Description": "Pas de date de naissance",
      "Expression": "isnull($DATENAIS$)",
      "id": "l129pyo0",
      "IfTrue": "l11z2too-l11z2too"
    },
    {
      "Description": "PRENOM est né en France",
      "Expression": "$LNAIS$ = \"1\"",
      "id": "l12a9n7c",
      "IfTrue": "l120kmks-l120kmks"
    },
    {
      "Description": "PRENOM est né à l'étranger",
      "Expression": "$LNAIS$ = \"2\"",
      "id": "l12a3m16",
      "IfTrue": "l120lqns-l120lqns"
    },
    {
      "Description": "PRENOM est de nationalité étrangère",
      "Expression": "$NATION3$ = true",
      "id": "l12a6ypi",
      "IfTrue": "l121ftlg-l121ftlg"
    },
    {
      "Description": "PRENOM a déjà vécu au moins un an à l'étranger",
      "Expression": "$VECUE$ = \"1\"",
      "id": "l12a81jj",
      "IfTrue": "l12b8hbj-l1uxyne3"
    },
    {
      "Description": "PRENOM est né à l'étranger",
      "Expression": "$LNAIS$ = \"2\"",
      "id": "l12a3l04",
      "IfTrue": "l127ghn9-l1283pqp"
    },
    {
      "Description": "Pas de réponse sur l'année d'arrivée en France",
      "Expression": "isnull($ANNARIV$)",
      "id": "l12a1idg",
      "IfTrue": "l1283pqp-l1283pqp"
    },
    {
      "Description": "Prénom est veuf, conjoint décédé",
      "Expression": "$SITUMATRI4$ = true",
      "id": "l13niid3",
      "IfTrue": "l13dy5ql-l13dy5ql"
    },
    {
      "Description": "PRENOM a plusieurs logements",
      "Expression": "$UNLOG$ = \"1\"",
      "id": "l13qb7yl",
      "IfTrue": "l13nyqwe-l13nyqwe"
    },
    {
      "Description": "Mineur sans parent dans le logement",
      "Expression": "$MINEUR$ = \"1\" and $NBPARL$ = \"0\"",
      "id": "l13qgrz8",
      "IfTrue": "l13ok7fx-l13ok7fx"
    },
    {
      "Description": "mineur plusieurs logements",
      "Expression": "$MINEUR$ = \"1\" and $UNLOG$ = \"1\"",
      "id": "l13qua0o",
      "IfTrue": "l13on6tn-l13on6tn"
    },
    {
      "Description": "mineur ayant un autre logement parental où il réside la moitié du temps",
      "Expression": "$DURLOG$ = \"2\" and $NBPARL$ = \"1\" and $MINLOGAUT$ = \"1\"",
      "id": "l13qzmx9",
      "IfTrue": "l13oux5e-l13oux5e"
    },
    {
      "Description": "Garde alternée",
      "Expression": "$GARDE$ = \"1\"",
      "id": "l13qvax7",
      "IfTrue": "l13pabqu-l13pabqu"
    },
    {
      "Description": "majeur plusieurs logements",
      "Expression": "$UNLOG$ = \"1\" and $MINEUR$ = \"2\"",
      "id": "l13r5eay",
      "IfTrue": "l13pbxr1-l13pyw1k"
    },
    {
      "Description": "L'autre logement de PRENOM n'est pas une résidence secondaire ou le logement d'un de ses parent.",
      "Expression": "$MINLOGAUT$ =\"2\" or $MINLOGAUT$ =\"3\" or $MINLOGAUT$ =\"4\" or $MINLOGAUT$ =\"5\" or $MINLOGAUT$ =\"6\" or $MAJLOGAUT$=\"1\" or $MAJLOGAUT$=\"2\" or $MAJLOGAUT$=\"3\" or $MAJLOGAUT$=\"6\"",
      "id": "l13r42ci",
      "IfTrue": "l13q9a24-l13q9a24"
    },
    {
      "Description": "L'autre logement de PRENOM est un logement collectif",
      "Expression": "$LOGCO$ = \"1\"",
      "id": "l13re9qu",
      "IfTrue": "l13qc9n8-l13qc9n8"
    },
    {
      "Description": "Liens de A avec les autres habitants",
      "Expression": "$PRENOM$ <> $PRENOMREF$ ",
      "id": "l14wcvbp",
      "IfTrue": "l13cpupe-l13cpupe"
    },
    {
      "Description": "PRENOM est majeur",
      "Expression": "cast($TRAGE6$,integer) > 1",
      "id": "l14whye4",
      "IfTrue": "l2orx7xf-l13dy5ql"
    },
    {
      "Description": "Il y a des budgets séparés dans le logement",
      "Expression": "$APART$ = \"1\"",
      "id": "l1asywu7",
      "IfTrue": "l1apfxdu-l1arjrkx"
    },
    {
      "Description": "Il y a plus d'un habitant dans le logement",
      "Expression": "cast($NBHAB$ ,integer) > 1 ",
      "id": "l1asjr4k",
      "IfTrue": "l1ap8gfy-l1ap8gfy"
    },
    {
      "Description": "Surface du logement non déclarée",
      "Expression": "isnull($SURFACE$)",
      "id": "l1awk81j",
      "IfTrue": "l1aueqyb-l1aueqyb"
    },
    {
      "Description": "Le ménage de PRENOM est propriétaire",
      "Expression": "$STOC$ = \"1\"",
      "id": "l1awew5k",
      "IfTrue": "l1at6gox-l1at6gox"
    },
    {
      "Description": "Le ménage de PRENOM est locataire",
      "Expression": "$STOC$ = \"3\"",
      "id": "l1awezrd",
      "IfTrue": "l1at8nud-l1at8nud"
    },
    {
      "Description": "Le ménage de PRENOM est locataire ou logé gratuitement",
      "Expression": "$STOC$ = \"3\" Or $STOC$ = \"4\"",
      "id": "l1awkguo",
      "IfTrue": "l1atqd1u-l1atqd1u"
    },
    {
      "Description": "PRENOM est sans emploi",
      "Expression": "$EMPLOI$ = \"2\"",
      "id": "l1ux9xbw",
      "IfTrue": "l1axg6y2-l1axn5kx"
    },
    {
      "Description": "Date retour de période à l'étranger non renseignée",
      "Expression": "isnull($DATERETOUR$)",
      "id": "l1uxqx5b",
      "IfTrue": "l1uxyne3-l1uxyne3"
    },
    {
      "Description": "PRENOM a déjà travaillé par le passé ",
      "Expression": "$ACTIVANTE$ = \"1\"",
      "id": "l2j6pxks",
      "IfTrue": "l1axn5kx-l1axn5kx"
    },
    {
      "Description": "Deuxième activité",
      "Expression": "$NBEMP$ = \"2\"",
      "id": "l2j6zt6g",
      "IfTrue": "l2j3b0l1-l2j4i1hr"
    },
    {
      "Description": "Personne en emploi",
      "Expression": "$EMPLOI$ = \"1\"",
      "id": "l2j78cpc",
      "IfTrue": "l1ax891g-l2itiw5b"
    },
    {
      "Description": "PRENOM a déjà travaillé",
      "Expression": "$ACTIVANTE$ = \"1\"",
      "id": "l2j6v0mr",
      "IfTrue": "l2j4dvv4-l2j4q4wo"
    },
    {
      "Description": "Libellé profession non trouvé ",
      "Expression": "$PCLCA$ = \"999\"",
      "id": "l2j6x4zg",
      "IfTrue": "l2j37ba4-l2j37ba4"
    },
    {
      "Description": "PRENOM est salarié du public ou du privé",
      "Expression": "$STCPUB$ = \"2\" or $STCPUB$ = \"3\"",
      "id": "l2j73hgp",
      "IfTrue": "l1uy49nh-l1w7wvih"
    },
    {
      "Description": "PRENOM est salarié en entreprise",
      "Expression": "$STCPUB$ = \"3\"",
      "id": "l2j7fueo",
      "IfTrue": "l1w579tb-l1w579tb"
    },
    {
      "Description": "PRENOM est salarié du public",
      "Expression": "$STCPUB$ = \"2\"",
      "id": "l2j7mr3t",
      "IfTrue": "l1w7wvih-l1w7wvih"
    },
    {
      "Description": "",
      "Expression": "$STCPUB$ <> \"4\"",
      "id": "l2j79jjs",
      "IfTrue": "l1w7xqie-l1wc3dr5"
    },
    {
      "Description": "$PRENOM$ est salarié du secteur public ou privé",
      "Expression": "$STCPUB$ = \"2\" or $STCPUB$ = \"3\"",
      "id": "l2j7bmc7",
      "IfTrue": "l1wcdojm-l1wcfol1"
    },
    {
      "Description": "Il y a moins de 10 personnes dans l'établissement",
      "Expression": "$NBSALETAB$  = \"1\"",
      "id": "l2j78vyv",
      "IfTrue": "l1wcfol1-l1wcfol1"
    },
    {
      "Description": "PRENOM est à son compte ou aide familial",
      "Expression": "$STCPUB$ = \"1\" or $STCPUB$ = \"5\"",
      "id": "l2j7w566",
      "IfTrue": "l1wde502-l1wd3z30"
    },
    {
      "Description": "Il y a entre 2 et 10 personnes dans l'établissement",
      "Expression": "$NBSAL$ = \"1\"",
      "id": "l2j7tk2g",
      "IfTrue": "l1wd3z30-l1wd3z30"
    },
    {
      "Description": "PRENOM est salarié",
      "Expression": "$STCPUB$ = \"2\" or $STCPUB$ = \"3\" or $STCPUB$ = \"4\"",
      "id": "l2j7p11v",
      "IfTrue": "l2hngtu9-l2it2sxv"
    },
    {
      "Description": "PRENOM n'est pas en alternance",
      "Expression": "$CONTAC$ <> 4",
      "id": "l2j7zb16",
      "IfTrue": "l2it2sxv-l2it2sxv"
    },
    {
      "Description": "Libellé profession non trouvé (999)",
      "Expression": "$PCLCA2J$ = \"999\"",
      "id": "l2j7ka7g",
      "IfTrue": "l2j3336h-l2j3336h"
    },
    {
      "Description": "PRENOM est salarié d'une entreprise",
      "Expression": "$STCPUB2J$ = \"3\"",
      "id": "l2j7yq03",
      "IfTrue": "l2j3hy37-l2j3hy37"
    },
    {
      "Description": "PRENOM est salarié du public",
      "Expression": "$STCPUB2J$ = \"2\"",
      "id": "l2j7savm",
      "IfTrue": "l2j3bn7e-l2j3bn7e"
    },
    {
      "Description": "PRENOM est à son compte ou aide familiale",
      "Expression": "$STCPUB2J$ = \"1\" or $STCPUB2J$ = \"5\"",
      "id": "l2j871m6",
      "IfTrue": "l2j4i1hr-l2j4i1hr"
    },
    {
      "Description": "Libellé de profession non reconnu (999)",
      "Expression": "$APLCA$ = \"999\"",
      "id": "l2j7pdrb",
      "IfTrue": "l2j4wcna-l2j4wcna"
    },
    {
      "Description": "PRENOM était salarié d'une entreprise",
      "Expression": "$ASTCPUB$ = \"3\"",
      "id": "l2j7unkm",
      "IfTrue": "l2j4lkhe-l2j4lkhe"
    },
    {
      "Description": "PRENOM était salarié du public",
      "Expression": "$ASTCPUB$ = \"1\" or $ASTCPUB$ = \"5\"",
      "id": "l2j7sr00",
      "IfTrue": "l2j4qf0d-l2j4qf0d"
    },
    {
      "Description": "PRENOM était à son compte ou aide familial ",
      "Expression": "$ASTCPUB$ = \"1\" or $ASTCPUB$ = \"5\"",
      "id": "l2j85lpn",
      "IfTrue": "l2j4q4wo-l2j4q4wo"
    },
    {
      "Description": "Personne de plus de 15 ans ",
      "Expression": "cast($TRAGE6$,integer) > 1 or isnull($TRAGE6$)",
      "id": "l2otmmsr",
      "IfTrue": "l1awvkop-l1axn5kx"
    },
    {
      "Description": "Pas en études et moins de 35 ans",
      "Expression": "$FF$ = \"2\" and (cast($AGE$,integer) < 35 or cast($TRAGE6$, integer) < 5)",
      "id": "l2ox5xww",
      "IfTrue": "l2otx5kf-l2otx5kf"
    },
    {
      "Description": "PRENOM est en études",
      "Expression": "$FF$ = \"1\" or $FFVAC$ = \"1\"",
      "id": "l2ox39sj",
      "IfTrue": "l2ou07gr-l2ou07gr"
    },
    {
      "Description": "PRENOM est inscrit au collège / lycée",
      "Expression": "$FFLIEU$ = \"1\"",
      "id": "l2owungc",
      "IfTrue": "l2ovmzu9-l2ovmzu9"
    },
    {
      "Description": "PRENOM est en première ou en terminale",
      "Expression": "$FFCLA$ = \"6\" or $FFCLA$ = \"7\"",
      "id": "l2oxb13q",
      "IfTrue": "l2ovtsij-l2ovtsij"
    },
    {
      "Description": "PRENOM est en 2ème année de CAP",
      "Expression": "$FFCLA$ = \"9\"",
      "id": "l2ox2pnp",
      "IfTrue": "l2ovpx9p-l2ovpx9p"
    },
    {
      "Description": "PRENOM dans un établissement autre que collège / lycée ou autre classe",
      "Expression": "$FFLIEU$ = \"2\" or $FFLIEU$ = \"3\" or $FFLIEU$ = \"4\" or $FFLIEU$ = \"5\" or $FFLIEU$ = \"6\" or $FFLIEU$ = \"7\" or $FFCLA$ = \"10\"",
      "id": "l2ox7m19",
      "IfTrue": "l2ovy39g-l2ovy39g"
    },
    {
      "Description": "PRENOM prépare un concours",
      "Expression": "$FFTYPFORM$ = \"2\"",
      "id": "l2oxfmvj",
      "IfTrue": "l2owam6j-l2owam6j"
    },
    {
      "Description": "PRENOM prépare un concours dont le niveau n'est pas certain",
      "Expression": "$FFCONC$ = \"2\" or $FFCONC$ = \"4\" or $FFCONC$ = \"7\" or $FFCONC$ = \"8\"",
      "id": "l2oxauys",
      "IfTrue": "l2ow3zh7-l2ow3zh7"
    },
    {
      "Description": "PRENOM suit une \"autre formation\" et est dans une école de la fonction publique",
      "Expression": "$FFTYPFORM$ = \"4\" and $FFLIEU$ = \"3\"",
      "id": "l2oxntno",
      "IfTrue": "l2owbbw3-l2owbbw3"
    },
    {
      "Description": "PRENOM suit une \"autre formation\" et est dans un lieu autre qu'une école de la fonction publique",
      "Expression": "$FFTYPFORM$ = \"4\" and $FFLIEU$ <> \"3\"",
      "id": "l2ox7xba",
      "IfTrue": "l2ow52ru-l2ow52ru"
    },
    {
      "Description": "PRENOM prépare un diplôme ou un titre",
      "Expression": "$FFTYPFORM$ = \"1\"",
      "id": "l2oxcu9u",
      "IfTrue": "l2owdadb-l2owdadb"
    },
    {
      "Description": "Le diplôme n'a pas été trouvé dans la liste",
      "Expression": "$FFDIPL$ = \"999\"",
      "id": "l2oxdmjo",
      "IfTrue": "l2owvxuc-l2owvxuc"
    },
    {
      "Description": "Le libellé est dans la liste et correspond à un diplôme du secondaire long",
      "Expression": "$FFDIPL$ <> \"999\" and cast(nvl($TYPLIST$,\"1\"),integer) <> 1",
      "id": "l2oxodsd",
      "IfTrue": "l2owkpof-l2owkpof"
    },
    {
      "Description": "Le libellé est dans la liste mais pas du secondaire long, ou pas dans la liste",
      "Expression": "($FFDIPL$ <> \"999\" and cast(nvl($TYPLIST$,\"1\"),integer) <> 1) or isnull($FFDIPL$)",
      "id": "l2oxukgu",
      "IfTrue": "l2owq6i0-l2owq6i0"
    },
    {
      "Description": "PRENOM n'a aucun diplôme",
      "Expression": "$GRDIPA$ = \"1\"",
      "id": "l2oy6gub",
      "IfTrue": "l2oxyt5u-l2oxyt5u"
    },
    {
      "Description": "PRENOM a un diplôme supérieur à bac+3",
      "Expression": "$GRDIPA$ = \"8\"",
      "id": "l2oydhnj",
      "IfTrue": "l2oyar5n-l2oyar5n"
    },
    {
      "Description": "Plusieurs personnes dans le ménage",
      "Expression": "cast($NBHAB$,integer) > 1",
      "id": "l2q316k7",
      "IfTrue": "l2j83vzf-l2j83vzf"
    },
    {
      "Description": "Plusieurs personnes dans le logement",
      "Expression": "cast($NBHAB$,integer) > 1",
      "id": "l2q328dn",
      "IfTrue": "l2orx7xf-l2orx7xf"
    },
    {
      "Description": "Plusieurs personnes dans le logement",
      "Expression": "cast($NBHAB$ ,integer) > 1",
      "id": "l2q35apg",
      "IfTrue": "l2os6w01-l2os3ku5"
    },
    {
      "Description": "PRENOM possède un diplôme",
      "Expression": "$TYPDIP$ = \"1\" or $TYPDIP$ = \"2\"",
      "id": "l2rdcfu3",
      "IfTrue": "l2rcd5gr-l2rcva4b"
    },
    {
      "Description": "Le diplôme n'est pas dans la liste",
      "Expression": "$DIPINTAL$ = \"999\"",
      "id": "l2rdp3ao",
      "IfTrue": "l2rcas4h-l2rcas4h"
    },
    {
      "Description": "La spécialité du diplôme n'est pas connue",
      "Expression": "cast(nvl($DIPINTA$,\"0\"), integer) <> 0 or cast($SPEUNDIP$, integer) <>1",
      "id": "l2rdssqh",
      "IfTrue": "l2rcqw4z-l2rcixoc"
    },
    {
      "Description": "La spécialité n'est pas dans la liste",
      "Expression": "$DIPSDA$ = \"999\"",
      "id": "l2rdp8ln",
      "IfTrue": "l2rcixoc-l2rcixoc"
    },
    {
      "Description": "Année d'obtention de diplôme inconnue",
      "Expression": "isnull($DATDIP$)",
      "id": "l2rdnvzl",
      "IfTrue": "l2rckr4f-l2rckr4f"
    },
    {
      "Description": "Libellé en clair non codé",
      "Expression": "isnull($DIPINTA$)",
      "id": "l2re9y97",
      "IfTrue": "l2rcvw2t-l2rcva4b"
    },
    {
      "Description": "Diplôme sur liste non codé",
      "Expression": "$DIPINTAL$ = \"999\"",
      "id": "l2re8krh",
      "IfTrue": "l2rcva4b-l2rcva4b"
    },
    {
      "Description": "PRENOM ne suit pas de formation formelle et ne possède pas de diplôme",
      "Expression": "$FFM$ = \"2\" and $TYPDIP$ = \"3\"",
      "id": "l2redyb8",
      "IfTrue": "l2rdg7w4-l2rdg7w4"
    },
    {
      "Description": "PRENOM a été à l'école ou possède un diplôme au plus du primaire et n'est pas en formation",
      "Expression": "$FSANSDIP$ = \"1\" or ($FFM$ = \"2\" and ($DIPLNIV$= \"2\" or $DIPLNIV$ = \"3\"))",
      "id": "l2remeoj",
      "IfTrue": "l2rdhhat-l2rdhhat"
    },
    {
      "Description": "PRENOM n'a pas de diplôme et a été à l'école ou possède un diplôme du primaire et a arrêté au-delà du primaire",
      "Expression": "$FSANSDIP$ = \"1\" or (($NIV0INIT$ = \"3\" or $NIV0INIT$ = \"4\" or $NIV0INIT$ = \"5\") and ($DIPLNIV$ = \"1\" or $DIPLNIV$ = \"2\"))",
      "id": "l2refn50",
      "IfTrue": "l2rdky32-l2rdlnzu"
    },
    {
      "Description": "Année d'obtention d'arrêt d'études inconnue",
      "Expression": "isnull($DATNIV$)",
      "id": "l2rej2zr",
      "IfTrue": "l2rdlnzu-l2rdlnzu"
    },
    {
      "Description": "Au moins un parent dans le logement",
      "Expression": "cast($NBPARL$, integer) <> 0",
      "id": "l2rf2lpk",
      "IfTrue": "l2rezz2m-l2rfgcr2"
    },
    {
      "Description": "Deux parents dans le logement",
      "Expression": "$NBPARL$ = \"2\"",
      "id": "l2rfgjc3",
      "IfTrue": "l2rfgcr2-l2rfgcr2"
    },
    {
      "Description": "Pas de père dans le logement",
      "Expression": "$PER1E$ = \"2\"",
      "id": "l2rkhhpo",
      "IfTrue": "l2rg3yn5-l2rfj8k5"
    },
    {
      "Description": "Père né à l'étranger",
      "Expression": "$NAIS1P$ = \"2\"",
      "id": "l2rksdw5",
      "IfTrue": "l2rfj8k5-l2rfj8k5"
    },
    {
      "Description": "Pas de mère dans le logement",
      "Expression": "$MER1E$ = \"2\"",
      "id": "l2rkddz6",
      "IfTrue": "l2rff2bf-l2rfzkn0"
    },
    {
      "Description": "Un seul ou aucun parent dans le logement",
      "Expression": "cast(nvl($NBPARL$, \"0\"), integer) <> 2",
      "id": "l2rm4atf",
      "IfTrue": "l2rg3yn5-l2rfzxv4"
    },
    {
      "Description": "Une mère et pas de père",
      "Expression": "$NAIS1P$ = \"3\" and ($MER1E$ = \"1\"or cast($NAIS1M$, integer) < 3)",
      "id": "l2rnqbcb",
      "IfTrue": "l2rfmjn7-l2rfmjn7"
    },
    {
      "Description": "PRENOM a une deuxième mère",
      "Expression": "$DEUXM$ = \"1\"",
      "id": "l2ro9poa",
      "IfTrue": "l2rfkipz-l2rfzlqo"
    },
    {
      "Description": "Deuxième mère née à l'étranger",
      "Expression": "$NAIS2M$ = \"2\"",
      "id": "l2ro14u1",
      "IfTrue": "l2rfzlqo-l2rfzlqo"
    },
    {
      "Description": "Un père mais pas de mère",
      "Expression": "$NAIS1M$ = \"3\" and ($PER1E$ = \"1\"or cast($NAIS1P$, integer) < 3)",
      "id": "l2ro9jwh",
      "IfTrue": "l2rfsu7w-l2rfsu7w"
    },
    {
      "Description": "PRENOM a un deuxème père",
      "Expression": "$DEUXP$ = \"1\"",
      "id": "l2roj7hh",
      "IfTrue": "l2rmzqg6-l2rfzxv4"
    },
    {
      "Description": "Deuxième père né à l'étranger",
      "Expression": "$NAIS2P$ = \"2\"",
      "id": "l2ro2uan",
      "IfTrue": "l2rfzxv4-l2rfzxv4"
    },
    {
      "Description": "Mère née à l'étranger",
      "Expression": "$NAIS1M$ = \"2\"",
      "id": "l2rr3thq",
      "IfTrue": "l2rfzkn0-l2rfzkn0"
    },
    {
      "Description": "Activité non trouvée",
      "Expression": "$ACTIV$ = \"999\"",
      "id": "l2rrmja3",
      "IfTrue": "l1wcbosx-l1wc3dr5"
    },
    {
      "Description": "PRENOM a plus de 15 ans",
      "Expression": "$TRAGE6$ <> \"1\"",
      "id": "l2ru1yyg",
      "IfTrue": "l2rtx7s1-l2ru38xi"
    },
    {
      "Description": "PRENOM a des enfants hors du logement",
      "Expression": "$ENFHORS$ = \"1\"",
      "id": "l2rts3dy",
      "IfTrue": "l2rtpdmi-l2ru38xi"
    },
    {
      "Description": "Mineur avec un seul parent dans le logement",
      "Expression": "$MINEUR$ = \"1\" and $NBPARL$ = \"1\"",
      "id": "l2ru72fo",
      "IfTrue": "l2rrx0wp-l2rtlmtn"
    },
    {
      "Description": "PRENOM n'a pas déclaré résider aussi dans le logement d'un autre parent dans le THL",
      "Expression": "cast(nvl($MINLOGAUT$, \"0\"),integer) <> 1",
      "id": "l2ruavln",
      "IfTrue": "l2rrx0wp-l2rrx0wp"
    },
    {
      "Description": "PRENOM ne dort jamais chez son autre parent",
      "Expression": "$APDOR$ = \"2\"",
      "id": "l2ru9a1e",
      "IfTrue": "l2rsgo4e-l2rspbb4"
    },
    {
      "Description": "PRENOM est parfois en contact avec son autre parent",
      "Expression": "$APCONTACT$ = \"1\"",
      "id": "l2ru851s",
      "IfTrue": "l2rspbb4-l2rspbb4"
    },
    {
      "Description": "PRENOM a un autre parent hors du logement",
      "Expression": "$MINLOGAUT$ = \"1\" or nvl($APDOR$,\"3\") <> \"3\"",
      "id": "l2rtvx06",
      "IfTrue": "l2rrn5na-l2rrn5na"
    },
    {
      "Description": "PRENOM dort parfois chez son autre parent",
      "Expression": "($MINLOGAUT$ = \"1\" and nvl($DURLOG$, \"1\") <> \"2\") or $APDOR$ = \"1\"",
      "id": "l2rue5kw",
      "IfTrue": "l2rsvbbn-l2rszrdg"
    },
    {
      "Description": "Modalités 1 à 6 de FAPDOR",
      "Expression": "$APDOR$ = \"1\" or isnull($DURLOG$)",
      "id": "l2rub3rx",
      "IfTrue": "l2rsvbbn-l2rsvbbn"
    },
    {
      "Description": "Modalités 1 et 2 de FAPDOR",
      "Expression": "$DURLOG$ = \"3\"",
      "id": "l2rukmdp",
      "IfTrue": "l2rss4sb-l2rss4sb"
    },
    {
      "Description": "Modalités 4 à 6 de FAPDOR",
      "Expression": "$DURLOG$ = \"1\"",
      "id": "l2ru52pu",
      "IfTrue": "l2rszrdg-l2rszrdg"
    },
    {
      "Description": "PRENOM a un autre parent en dehors du logement",
      "Expression": "$MINLOGAUT$ = \"1\" or nvl($APDOR$,\"3\") <> \"3\"",
      "id": "l2ru9b6c",
      "IfTrue": "l2rt2xtu-l2rtlmtn"
    },
    {
      "Description": "PARENT a déjà vécu avec l'autre parent de PRENOM",
      "Expression": "$APVECU$ = \"1\"",
      "id": "l2rumr7c",
      "IfTrue": "l2rt05m9-l2rtfy87"
    },
    {
      "Description": "L'autre parent de PRENOM habite dans une autre commune",
      "Expression": "$APLOG$ = \"2\"",
      "id": "l2rui7dr",
      "IfTrue": "l2rtx9hc-l2rtx9hc"
    },
    {
      "Description": "L'autre parent de PRENOM habite dans un autre pays",
      "Expression": "$APLOG$ = \"3\"",
      "id": "l2ruaje5",
      "IfTrue": "l2rtlmtn-l2rtlmtn"
    },
    {
      "Description": "PRENOM est limité dans ses activités quotidiennes",
      "Expression": "nvl($GALI$,\"3\") <> \"3\"",
      "id": "l2succcj",
      "IfTrue": "l2ssbxj4-l2stpod9"
    },
    {
      "Description": "Personne de plus de 15 ans",
      "Expression": "cast($TRAGE6$, integer) > 1",
      "id": "l3a05lpo",
      "IfTrue": "l2os3ku5-l2os3ku5"
    }
  ],
  "ComponentGroup": [
    {
      "MemberReference": [
        "l1asf1w0",
        "l1at1uco",
        "l1atmg24",
        "l1au1n73",
        "l1au4bgg",
        "l1aueqyb",
        "l1asvzc5",
        "l1asqysn",
        "l1at6gox",
        "l1at8nud",
        "l1atqd1u",
        "l1atmtkj",
        "idendquest"
      ],
      "Label": [
        "Components for page 1"
      ],
      "id": "kg2az5c9",
      "Name": "PAGE_1"
    }
  ],
  "agency": "fr.insee",
  "genericName": "QUESTIONNAIRE",
  "Label": [
    "TCM_DL_Description du logement"
  ],
  "childQuestionnaireRef": [],
  "Name": "TCM_DL",
  "Variables": {
    "Variable": [
      {
        "Formula": "substr(cast($DATENAIS$,string,\"YYYY-MM-DD\"),1,4)",
        "Scope": "l0v3gfcr",
        "Label": "Année de naissance (ANNAIS)",
        "id": "l13h1ecy",
        "type": "CalculatedVariableType",
        "Name": "ANNAIS",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "4"
        }
      },
      {
        "Formula": "cast((2022 - cast($ANNAIS$,integer)), string)",
        "Scope": "l0v3gfcr",
        "Label": "Âge",
        "id": "l13h4aiz",
        "type": "CalculatedVariableType",
        "Name": "AGE",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "4"
        }
      },
      {
        "Formula": "if isnull($DATENAIS$) then $TRAGE$ \r\nelse if not(isnull($DATENAIS$)) and cast($AGE$,integer) < 15 then \"1\"\r\nelse if not(isnull($DATENAIS$)) and cast($AGE$,integer) > 14 and cast($AGE$,integer) < 18 then \"2\"\r\nelse if not(isnull($DATENAIS$)) and cast($AGE$,integer) > 17 and cast($AGE$,integer) < 25 then \"3\"\r\nelse if not(isnull($DATENAIS$)) and cast($AGE$,integer) > 24 and cast($AGE$,integer) < 40 then \"4\"\r\nelse if not(isnull($DATENAIS$)) and cast($AGE$,integer) > 39 and cast($AGE$,integer) < 60 then \"5\"\r\nelse if isnull($DATENAIS$) and isnull($TRAGE$) then null\r\nelse \"6\"",
        "Scope": "l0v3gfcr",
        "Label": "Tranches d'âges calculées (TRAGE6)",
        "id": "l13kfbts",
        "type": "CalculatedVariableType",
        "Name": "TRAGE6",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "1"
        }
      },
      {
        "Formula": "if isnull($SEXE$) then \"il/elle\"\r\nelse if $SEXE$ = \"1\" then \"il\"\r\nelse \"elle\"\r\n",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - PRONOM",
        "id": "l14uaqgk",
        "type": "CalculatedVariableType",
        "Name": "LIB_PR",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "10"
        }
      },
      {
        "Formula": "if isnull($SEXE$) then \"er(ère)\"\r\nelse if $SEXE$ = \"1\" then \"er\"\r\nelse \"ère\"",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - ER(ERE)",
        "id": "l14tv7tn",
        "type": "CalculatedVariableType",
        "Name": "LIB_ERE",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "10"
        }
      },
      {
        "Formula": "first_value($G_PRENOM$ over())\r\n",
        "Label": "Premier prénom (PRENOMREF)",
        "id": "l14vgvlc",
        "type": "CalculatedVariableType",
        "Name": "PRENOMREF",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 249
        }
      },
      {
        "Formula": "$G_PRENOM$",
        "Scope": "l0v3gfcr",
        "Label": "PRENOM",
        "id": "l14vew0k",
        "type": "CalculatedVariableType",
        "Name": "PRENOM",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 249
        }
      },
      {
        "Formula": "if isnull($SEXE$) then \"(ne)\"\r\nelse if $SEXE$ = \"1\" then \"\"\r\nelse \"ne\"",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - NE",
        "id": "l1w5c7yp",
        "type": "CalculatedVariableType",
        "Name": "LIB_NE",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "10"
        }
      },
      {
        "Formula": "if isnull($SEXE$) then \"Homme ou Femme\"\r\nelse if $SEXE$ = \"1\" then \"Homme\"\r\nelse \"Femme\"",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - HF",
        "id": "l1w5mjq9",
        "type": "CalculatedVariableType",
        "Name": "LIB_HF",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "10"
        }
      },
      {
        "Formula": "if ($PRENOM$ = $PRENOMREF$) then \"votre\"\r\nelse \"son\"",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - SON",
        "id": "l2itqw98",
        "type": "CalculatedVariableType",
        "Name": "LIB_SON",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "5"
        }
      },
      {
        "Formula": "if ($PRENOM$ = $PRENOMREF$) then \"votre\"\r\nelse \"sa\"",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - SA",
        "id": "l2iu1atg",
        "type": "CalculatedVariableType",
        "Name": "LIB_SA",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "5"
        }
      },
      {
        "Formula": "if isnull($SEXE$) then \"(e)\"\r\nelse if $SEXE$ = \"1\" then \"\"\r\nelse \"e\"\r\n",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - E",
        "id": "l2iur75u",
        "type": "CalculatedVariableType",
        "Name": "LIB_E",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "5"
        }
      },
      {
        "Formula": "if $SITUAEU$ = \"1\" then (\r\n    if $STCPUB$ = \"2\" or $STCPUB$ = \"3\" or $STCPUB$ =\"4\" then (\r\n        if $TPP$ = \"1\" then \"1\" \r\n        else if $TPP$ = \"2\" then \"2\"\r\n        else \"9\")\r\n    else if $STCPUB$ = \"1\" or $STCPUB$ = \"5\" then \"3\"\r\n    else \"9\")\r\nelse if $SITUAEU$ = \"2\" then \"4\"\r\nelse if $SITUAEU$ = \"3\" then \"5\"\r\nelse if $SITUAEU$ = \"4\" then \"6\"\r\nelse if $SITUAEU$ = \"5\" then \"7\"\r\nelse if $SITUAEU$ = \"6\" then \"8\"\r\nelse if isnull($SITUAEU$) then \"9\"\r\nelse \"9\"",
        "Label": "Situation courante (SITCOUR)",
        "id": "l2j5x6w7",
        "type": "CalculatedVariableType",
        "Name": "SITCOUR",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 249
        }
      },
      {
        "Formula": "if $SITUAEU$ = \"1\" then \"1\"\r\nelse if isnull($SITUAEU$) then \"2\"\r\nelse \"2\"",
        "Scope": "l0v3gfcr",
        "Label": "En emploi (EMPLOI)",
        "id": "l2j6udu0",
        "type": "CalculatedVariableType",
        "Name": "EMPLOI",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "1"
        }
      },
      {
        "Formula": "if ($PRENOM$ = $PRENOMREF$) then \"vos\"\r\nelse \"ses\"",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - SES",
        "id": "l2osro6c",
        "type": "CalculatedVariableType",
        "Name": "LIB_SES",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "5"
        }
      },
      {
        "Formula": "if (cast($TRAGE6$ ,integer) <= 2) then \"1\"\r\nelse \"2\"",
        "Scope": "l0v3gfcr",
        "Label": "Mineur (AGE < 18)",
        "id": "l2oti60m",
        "type": "CalculatedVariableType",
        "Name": "MINEUR",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "2"
        }
      },
      {
        "Formula": "if ($FF$ = \"1\") then \"1\"\r\nelse if ($FFVAC$ = \"1\") then \"1\"\r\nelse if isnull($FF$) and isnull($FFVAC$) then \"2\"\r\nelse \"2\"",
        "Scope": "l0v3gfcr",
        "Label": "Formation formelle en cours (FFM)",
        "id": "l2re729e",
        "type": "CalculatedVariableType",
        "Name": "FFM",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "1"
        }
      },
      {
        "Formula": "if nvl($NBPARL$, \"0\")=\"0\" then \"2\"\r\nelse if $NBPARL$ = \"1\" and $SPAR1$ = \"1\" then \"1\"\r\nelse if $NBPARL$ = \"1\" and $SPAR1$ = \"2\" then \"2\"\r\nelse if $NBPARL$ = \"2\" and $SPAR1$ = \"1\" then \"1\"\r\nelse if $NBPARL$ = \"2\" and $SPAR1$ = \"2\" and $SPAR2$ = \"1\" then \"1\"\r\nelse if $NBPARL$ = \"2\" and $SPAR1$ = \"2\" and $SPAR2$ = \"2\" then \"2\"\r\nelse \"2\"",
        "Scope": "l0v3gfcr",
        "Label": "Père dans le logement (PER1E)",
        "id": "l2rf764i",
        "type": "CalculatedVariableType",
        "Name": "PER1E",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "1"
        }
      },
      {
        "Formula": "if nvl($NBPARL$, \"0\") = \"0\" then \"2\"\r\nelse if $NBPARL$ = \"1\" and $SPAR1$ = \"2\" then \"1\"\r\nelse if $NBPARL$ = \"1\" and $SPAR1$ = \"1\" then \"2\"\r\nelse if $NBPARL$ = \"2\" and $SPAR1$ = \"2\" then \"1\"\r\nelse if $NBPARL$ = \"2\" and $SPAR1$ = \"1\" and $SPAR2$ = \"2\" then \"1\"\r\nelse if $NBPARL$ = \"2\" and $SPAR1$ = \"1\" and $SPAR2$ = \"1\" then \"2\"\r\nelse \"2\"",
        "Scope": "l0v3gfcr",
        "Label": "Mère dans le logement (MER1E)",
        "id": "l2rez3ig",
        "type": "CalculatedVariableType",
        "Name": "MER1E",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "1"
        }
      },
      {
        "Formula": "if nvl($PRENOMP$, \"0\")=\"0\" and $PRENOM$ = $PRENOMREF$ then \"votre autre parent\"\r\nelse if nvl($PRENOMP$, \"0\")=\"0\" and $PRENOM$ <> $PRENOMREF$ then \"son autre parent\"\r\nelse $PRENOMP$",
        "Scope": "l0v3gfcr",
        "Label": "Prénom de l'autre parent avec null (PRENOMAP)",
        "id": "l2rs9ar9",
        "type": "CalculatedVariableType",
        "Name": "PRENOMAP",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 249
        }
      },
      {
        "Formula": "if ($PRENOM$ = $PRENOMREF$) then \"vous\"\r\nelse \"lui\"",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - LUI",
        "id": "l2rs5tmg",
        "type": "CalculatedVariableType",
        "Name": "LIB_LUI",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 249
        }
      },
      {
        "Formula": "if ($PRENOM$ = $PRENOMREF$) then \"vous\"\r\nelse \"se\"",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - SE",
        "id": "l2st84mt",
        "type": "CalculatedVariableType",
        "Name": "LIB_SE",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 249
        }
      },
      {
        "Formula": "if isnull($NHAB$) then \"1\"\r\nelse $NHAB$",
        "Label": "Nombre d'habitants dans le logement (NBHAB)",
        "id": "l2ynwyei",
        "type": "CalculatedVariableType",
        "Name": "NBHAB",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "2"
        }
      },
      {
        "Formula": "if isnull($SEXE$) then \"le(la)\"\r\nelse if $SEXE$ = \"1\" then \"le\"\r\nelse \"la\"",
        "Scope": "l0v3gfcr",
        "Label": "GENRER - LE(LA)",
        "id": "l3jyfypp",
        "type": "CalculatedVariableType",
        "Name": "LIB_LE",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": "10"
        }
      },
      {
        "Label": "Adresse logement",
        "id": "l0v32sjd",
        "type": "ExternalVariableType",
        "Name": "ADR",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 249
        }
      },
      {
        "Label": "Type de logement (TYPLOG)",
        "id": "l1au3z3p",
        "type": "CollectedVariableType",
        "CodeListReference": "l1au0pkk",
        "Name": "TYPLOG",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 1
        }
      },
      {
        "Label": "Nombre de pièces (NPIECES)",
        "id": "l1au6433",
        "type": "CollectedVariableType",
        "Name": "NPIECES",
        "Datatype": {
          "Maximum": "100",
          "Minimum": "1",
          "typeName": "NUMERIC",
          "Unit": "",
          "type": "NumericDatatypeType",
          "Decimals": ""
        }
      },
      {
        "Label": "Surface déclarée (SURFACE)",
        "id": "l1audqbs",
        "type": "CollectedVariableType",
        "Name": "SURFACE",
        "Datatype": {
          "Maximum": "10000",
          "Minimum": "1",
          "typeName": "NUMERIC",
          "Unit": "",
          "type": "NumericDatatypeType",
          "Decimals": ""
        }
      },
      {
        "Label": "Surface en 6 tranches (SURFTR)",
        "id": "l1aux87k",
        "type": "CollectedVariableType",
        "CodeListReference": "l1aufkzv",
        "Name": "SURFTR",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 1
        }
      },
      {
        "Label": "STOC label",
        "id": "l2qcfwgz",
        "type": "CollectedVariableType",
        "CodeListReference": "l1asjley",
        "Name": "STOC",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 1
        }
      },
      {
        "Label": "Remboursement d'emprunts (STOP)",
        "id": "l1astgw8",
        "type": "CollectedVariableType",
        "CodeListReference": "l0v2k0fj",
        "Name": "STOP",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 1
        }
      },
      {
        "Label": "Locataire (STOL)",
        "id": "l1atq3ws",
        "type": "CollectedVariableType",
        "CodeListReference": "l0v2k0fj",
        "Name": "STOL",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 1
        }
      },
      {
        "Label": "Propriétaire du logement loué (LOGPROPRI)",
        "id": "l1ato6sk",
        "type": "CollectedVariableType",
        "CodeListReference": "l1ata22l",
        "Name": "LOGPROPRI",
        "Datatype": {
          "Pattern": "",
          "typeName": "TEXT",
          "type": "TextDatatypeType",
          "MaxLength": 1
        }
      },
      {
        "Label": "Date d'emménagement (EMMENAGE)",
        "id": "l1atsehf",
        "type": "CollectedVariableType",
        "Name": "EMMENAGE",
        "Datatype": {
          "Maximum": "2022",
          "Minimum": "1900",
          "Format": "YYYY",
          "typeName": "DATE",
          "type": "DateDatatypeType"
        }
      }
    ]
  },
  "lastUpdatedDate": "Wed Mar 01 2023 16:04:33 GMT+0100 (heure normale d’Europe centrale)",
  "DataCollection": [
    {
      "id": "esa-dc-2018",
      "uri": "http://ddi:fr.insee:DataCollection.esa-dc-2018",
      "Name": "Enquête sectorielle annuelle 2018"
    }
  ],
  "final": false,
  "flowLogic": "FILTER",
  "id": "le2v7xet",
  "TargetMode": [
    "CAPI",
    "CATI",
    "CAWI",
    "PAPI"
  ],
  "CodeLists": {
    "CodeList": [
      {
        "Label": "L_TYPLOG",
        "id": "l1au0pkk",
        "Code": [
          {
            "Parent": "",
            "Label": "Une maison",
            "Value": "1"
          },
          {
            "Parent": "",
            "Label": "Un appartement",
            "Value": "2"
          },
          {
            "Parent": "",
            "Label": "Un logement-foyer",
            "Value": "3"
          },
          {
            "Parent": "",
            "Label": "Une chambre d'hôtel",
            "Value": "4"
          },
          {
            "Parent": "",
            "Label": "Une habitation de fortune",
            "Value": "5"
          },
          {
            "Parent": "",
            "Label": "Une pièce indépendante (ayant sa propre entrée)",
            "Value": "6"
          }
        ],
        "Name": ""
      },
      {
        "Label": "L_SURFTR",
        "id": "l1aufkzv",
        "Code": [
          {
            "Parent": "",
            "Label": "\"Moins de 25 m²\"",
            "Value": "1"
          },
          {
            "Parent": "",
            "Label": "\"De 26 à 40 m²\"",
            "Value": "2"
          },
          {
            "Parent": "",
            "Label": "\"De 41 à 70 m²\"",
            "Value": "3"
          },
          {
            "Parent": "",
            "Label": "\"De 71 à 100 m²\"",
            "Value": "4"
          },
          {
            "Parent": "",
            "Label": "\"De 101 à 150 m²\"",
            "Value": "5"
          },
          {
            "Parent": "",
            "Label": "\"Plus de 150 m²\"",
            "Value": "6"
          }
        ],
        "Name": ""
      },
      {
        "Label": "L_STOC",
        "id": "l1asjley",
        "Code": [
          {
            "Parent": "",
            "Label": "Propriétaire",
            "Value": "1"
          },
          {
            "Parent": "",
            "Label": "Usufruitier, y compris en viager",
            "Value": "2"
          },
          {
            "Parent": "",
            "Label": "Locataire ou sous-locataire",
            "Value": "3"
          },
          {
            "Parent": "",
            "Label": "Logé gratuitement, avec un paiement éventuel de charges",
            "Value": "4"
          }
        ],
        "Name": ""
      },
      {
        "Label": "OUI_NON",
        "id": "l0v2k0fj",
        "Code": [
          {
            "Parent": "",
            "Label": "Oui",
            "Value": "1"
          },
          {
            "Parent": "",
            "Label": "Non",
            "Value": "2"
          }
        ],
        "Name": ""
      },
      {
        "Label": "L_LOGPROPRI",
        "id": "l1ata22l",
        "Code": [
          {
            "Parent": "",
            "Label": "L'employeur d'un membre du ménage dans le cadre d'un logement de fonction ?",
            "Value": "1"
          },
          {
            "Parent": "",
            "Label": "Un organisme HLM (ou assimilé, OPAC, offices, sociétés, fondations) ?",
            "Value": "2"
          },
          {
            "Parent": "",
            "Label": "Une administration, un organisme de Sécurité Sociale, ou une association au titre de l'Action logement ?",
            "Value": "3"
          },
          {
            "Parent": "",
            "Label": "Une banque, une assurance ou une autre société du secteur public ou du secteur privé ?",
            "Value": "4"
          },
          {
            "Parent": "",
            "Label": "Un membre de la famille ?",
            "Value": "5"
          },
          {
            "Parent": "",
            "Label": "Un autre particulier ?",
            "Value": "6"
          },
          {
            "Parent": "",
            "Label": "Autre cas ?",
            "Value": "7"
          }
        ],
        "Name": ""
      }
    ]
  },
  "formulasLanguage": "VTL",
  "Child": [
    {
      "Control": [],
      "depth": 1,
      "FlowControl": [],
      "genericName": "MODULE",
      "Label": [
        "Description du logement "
      ],
      "id": "l1asf1w0",
      "TargetMode": [
        "CAPI",
        "CATI",
        "CAWI",
        "PAPI"
      ],
      "Declaration": [
        {
          "declarationType": "HELP",
          "Text": "\"Module de description du logement, les informations collectées sont au niveau logement et sont les mêmes pour tous les ménages du logement (et tous les habitants)\"",
          "id": "l1asaddi",
          "position": "AFTER_QUESTION_TEXT",
          "DeclarationMode": [
            "CAPI",
            "CATI",
            "CAWI",
            "PAPI"
          ]
        },
        {
          "declarationType": "HELP",
          "Text": "\"Le module n'est pas finalisé, il est probable qu'une sous-séquence optionnelle de questions plus détaillées soient ajouté\"",
          "id": "l1as4um0",
          "position": "AFTER_QUESTION_TEXT",
          "DeclarationMode": [
            "CAPI",
            "CATI",
            "CAWI",
            "PAPI"
          ]
        },
        {
          "declarationType": "HELP",
          "Text": "\"Ce module doit être posé une seule fois pour l'ensemble des ménage, c'est un QL\"",
          "id": "l2otrrmr",
          "position": "AFTER_QUESTION_TEXT",
          "DeclarationMode": [
            "CAPI",
            "CATI",
            "CAWI",
            "PAPI"
          ]
        }
      ],
      "type": "SequenceType",
      "Child": [
        {
          "Control": [],
          "depth": 2,
          "FlowControl": [],
          "genericName": "SUBMODULE",
          "Label": [
            "Questions optionnelles logement"
          ],
          "id": "l1at1uco",
          "TargetMode": [
            "CAPI",
            "CATI",
            "CAWI",
            "PAPI"
          ],
          "Declaration": [
            {
              "declarationType": "HELP",
              "Text": "\"Questions supplémentaires optionnelles de description du logement\"",
              "id": "l1atck8w",
              "position": "AFTER_QUESTION_TEXT",
              "DeclarationMode": [
                "CAPI",
                "CATI",
                "CAWI",
                "PAPI"
              ]
            }
          ],
          "type": "SequenceType",
          "Child": [
            {
              "Response": [
                {
                  "CollectedVariableReference": "l1au3z3p",
                  "id": "l1auvika",
                  "mandatory": false,
                  "CodeListReference": "l1au0pkk",
                  "Datatype": {
                    "Pattern": "",
                    "typeName": "TEXT",
                    "visualizationHint": "RADIO",
                    "type": "TextDatatypeType",
                    "MaxLength": 1
                  }
                }
              ],
              "Control": [],
              "depth": 3,
              "FlowControl": [],
              "Label": [
                "\"A quoi correspond le logement situé à l'adresse \" || $ADR$ || \" ?\""
              ],
              "ClarificationQuestion": [],
              "id": "l1atmg24",
              "TargetMode": [
                "CAPI",
                "CATI",
                "CAWI",
                "PAPI"
              ],
              "Declaration": [],
              "type": "QuestionType",
              "questionType": "SINGLE_CHOICE",
              "Name": "TYPLOG"
            },
            {
              "Response": [
                {
                  "CollectedVariableReference": "l1au6433",
                  "id": "l1aurrer",
                  "mandatory": false,
                  "Datatype": {
                    "Maximum": "100",
                    "Minimum": "1",
                    "typeName": "NUMERIC",
                    "Unit": "",
                    "type": "NumericDatatypeType",
                    "Decimals": ""
                  }
                }
              ],
              "Control": [],
              "depth": 3,
              "FlowControl": [],
              "Label": [
                "\"Combien de pièces compte le logement situé à l'adresse \" || $ADR$ || \" ?\""
              ],
              "id": "l1au1n73",
              "TargetMode": [
                "CAPI",
                "CATI",
                "CAWI",
                "PAPI"
              ],
              "Declaration": [
                {
                  "declarationType": "HELP",
                  "Text": "\"Compter les pièces d'habitation telles que salle à manger, séjour, chambre, etc., quelle que soit leur surface. Compter la cuisine uniquement si sa surface est supérieure à 12 m²\"",
                  "id": "l1au0511",
                  "position": "AFTER_QUESTION_TEXT",
                  "DeclarationMode": [
                    "CAPI",
                    "CATI",
                    "CAWI",
                    "PAPI"
                  ]
                },
                {
                  "declarationType": "HELP",
                  "Text": "\"Ne compter pas les pièces telles qu'entrée, couloir, salle de bains, buanderie, WC, véranda ni les pièces à usage exclusivement professionnel (atelier, cabinet de médecin, etc.).\"",
                  "id": "l1au1wbc",
                  "position": "AFTER_QUESTION_TEXT",
                  "DeclarationMode": [
                    "CAPI",
                    "CATI",
                    "CAWI",
                    "PAPI"
                  ]
                },
                {
                  "declarationType": "HELP",
                  "Text": "\"Une pièce combinée cuisine-séjour compte comme une seule pièce, sauf si elle est partagée par une cloison.\"",
                  "id": "l1au4wcm",
                  "position": "AFTER_QUESTION_TEXT",
                  "DeclarationMode": [
                    "CAPI",
                    "CATI",
                    "CAWI",
                    "PAPI"
                  ]
                }
              ],
              "type": "QuestionType",
              "questionType": "SIMPLE",
              "Name": "NPIECES"
            },
            {
              "Response": [
                {
                  "CollectedVariableReference": "l1audqbs",
                  "id": "l1av085u",
                  "mandatory": false,
                  "Datatype": {
                    "Maximum": "10000",
                    "Minimum": "1",
                    "typeName": "NUMERIC",
                    "Unit": "",
                    "type": "NumericDatatypeType",
                    "Decimals": ""
                  }
                }
              ],
              "Control": [],
              "depth": 3,
              "FlowControl": [],
              "Label": [
                "\"Quelle est la surface du logement situé à l'adresse \" || $ADR$ || \" ? (en m²)\""
              ],
              "id": "l1au4bgg",
              "TargetMode": [
                "CAPI",
                "CATI",
                "CAWI",
                "PAPI"
              ],
              "Declaration": [
                {
                  "declarationType": "HELP",
                  "Text": "\"Cette fois-ci, tenir compte de toutes les pièces, y compris couloir, cuisine, WC, salle de bain. Ne pas tenir compte des balcons, terrases, caves, greniers ou parkings, ni des pièces à usage exclusivement professionnel\"",
                  "id": "l1au6utz",
                  "position": "AFTER_QUESTION_TEXT",
                  "DeclarationMode": [
                    "CAPI",
                    "CATI",
                    "CAWI",
                    "PAPI"
                  ]
                }
              ],
              "type": "QuestionType",
              "questionType": "SIMPLE",
              "Name": "SURFACE"
            },
            {
              "Response": [
                {
                  "CollectedVariableReference": "l1aux87k",
                  "id": "l1auw3l5",
                  "mandatory": false,
                  "CodeListReference": "l1aufkzv",
                  "Datatype": {
                    "Pattern": "",
                    "typeName": "TEXT",
                    "visualizationHint": "RADIO",
                    "type": "TextDatatypeType",
                    "MaxLength": 1
                  }
                }
              ],
              "Control": [],
              "depth": 3,
              "FlowControl": [],
              "Label": [
                "\"A combien estimez-vous approximativement la surface du logement situé à l'adresse \" || $ADR$ || \" ?\""
              ],
              "ClarificationQuestion": [],
              "id": "l1aueqyb",
              "TargetMode": [
                "CAPI",
                "CATI",
                "CAWI",
                "PAPI"
              ],
              "Declaration": [],
              "type": "QuestionType",
              "questionType": "SINGLE_CHOICE",
              "Name": "SURFTR"
            }
          ],
          "Name": "OPT_Lgt"
        },
        {
          "Control": [],
          "depth": 2,
          "FlowControl": [],
          "genericName": "SUBMODULE",
          "Label": [
            "Questions du module logement"
          ],
          "id": "l1asvzc5",
          "TargetMode": [
            "CAPI",
            "CATI",
            "CAWI",
            "PAPI"
          ],
          "Declaration": [],
          "type": "SequenceType",
          "Child": [
            {
              "Response": [
                {
                  "CollectedVariableReference": "l2qcfwgz",
                  "id": "l1auyha2",
                  "mandatory": false,
                  "CodeListReference": "l1asjley",
                  "Datatype": {
                    "Pattern": "",
                    "typeName": "TEXT",
                    "visualizationHint": "CHECKBOX",
                    "type": "TextDatatypeType",
                    "MaxLength": 1
                  }
                }
              ],
              "Control": [],
              "depth": 3,
              "FlowControl": [],
              "Label": [
                "\"Quel est le statut d'occupation du ménage habitant le logement situé à l'adresse \" || $ADR$ || \" ?\""
              ],
              "ClarificationQuestion": [],
              "id": "l1asqysn",
              "TargetMode": [
                "CAPI",
                "CATI",
                "CAWI",
                "PAPI"
              ],
              "Declaration": [],
              "type": "QuestionType",
              "questionType": "SINGLE_CHOICE",
              "Name": "STOC"
            },
            {
              "Response": [
                {
                  "CollectedVariableReference": "l1astgw8",
                  "id": "l1av1y5s",
                  "mandatory": false,
                  "CodeListReference": "l0v2k0fj",
                  "Datatype": {
                    "Pattern": "",
                    "typeName": "TEXT",
                    "visualizationHint": "CHECKBOX",
                    "type": "TextDatatypeType",
                    "MaxLength": 1
                  }
                }
              ],
              "Control": [],
              "depth": 3,
              "FlowControl": [],
              "Label": [
                "\"Ce ménage doit-il rembourser actuellement un ou plusieurs emprunts pour ce logement ?\""
              ],
              "ClarificationQuestion": [],
              "id": "l1at6gox",
              "TargetMode": [
                "CAPI",
                "CATI",
                "CAWI",
                "PAPI"
              ],
              "Declaration": [],
              "type": "QuestionType",
              "questionType": "SINGLE_CHOICE",
              "Name": "STOP"
            },
            {
              "Response": [
                {
                  "CollectedVariableReference": "l1atq3ws",
                  "id": "l1auyess",
                  "mandatory": false,
                  "CodeListReference": "l0v2k0fj",
                  "Datatype": {
                    "Pattern": "",
                    "typeName": "TEXT",
                    "visualizationHint": "RADIO",
                    "type": "TextDatatypeType",
                    "MaxLength": 1
                  }
                }
              ],
              "Control": [],
              "depth": 3,
              "FlowControl": [],
              "Label": [
                "\"Ce logement est-il un logement social ?\""
              ],
              "ClarificationQuestion": [],
              "id": "l1at8nud",
              "TargetMode": [
                "CAPI",
                "CATI",
                "CAWI",
                "PAPI"
              ],
              "Declaration": [],
              "type": "QuestionType",
              "questionType": "SINGLE_CHOICE",
              "Name": "STOL"
            },
            {
              "Response": [
                {
                  "CollectedVariableReference": "l1ato6sk",
                  "id": "l1av2w8v",
                  "mandatory": false,
                  "CodeListReference": "l1ata22l",
                  "Datatype": {
                    "Pattern": "",
                    "typeName": "TEXT",
                    "visualizationHint": "CHECKBOX",
                    "type": "TextDatatypeType",
                    "MaxLength": 1
                  }
                }
              ],
              "Control": [],
              "depth": 3,
              "FlowControl": [],
              "Label": [
                "\"Pour ce ménage, le propriétaire du logement est ...\""
              ],
              "ClarificationQuestion": [],
              "id": "l1atqd1u",
              "TargetMode": [
                "CAPI",
                "CATI",
                "CAWI",
                "PAPI"
              ],
              "Declaration": [
                {
                  "declarationType": "HELP",
                  "Text": "\"Qui est le propriétaire de ce logement ?\"",
                  "id": "l1ati3zd",
                  "position": "AFTER_QUESTION_TEXT",
                  "DeclarationMode": [
                    "CAPI",
                    "CATI",
                    "CAWI",
                    "PAPI"
                  ]
                }
              ],
              "type": "QuestionType",
              "questionType": "SINGLE_CHOICE",
              "Name": "LOGPROPRI"
            },
            {
              "Response": [
                {
                  "CollectedVariableReference": "l1atsehf",
                  "id": "l1auvdqg",
                  "mandatory": false,
                  "Datatype": {
                    "Maximum": "2022",
                    "Minimum": "1900",
                    "Format": "YYYY",
                    "typeName": "DATE",
                    "type": "DateDatatypeType"
                  }
                }
              ],
              "Control": [],
              "depth": 3,
              "FlowControl": [],
              "Label": [
                "\"En quelle année ce ménage est-arrivé dans le logement situé à l'adresse \" || $ADR$ || \" ?\"\r\n\r\n"
              ],
              "id": "l1atmtkj",
              "TargetMode": [
                "CAPI",
                "CATI",
                "CAWI",
                "PAPI"
              ],
              "Declaration": [
                {
                  "declarationType": "HELP",
                  "Text": "\"En cas d'emménagement séparé des membres du ménage, choisir la date d'entrée du premier occupant.\"",
                  "id": "l1atq9rq",
                  "position": "AFTER_QUESTION_TEXT",
                  "DeclarationMode": [
                    "CAPI",
                    "CATI",
                    "CAWI",
                    "PAPI"
                  ]
                },
                {
                  "declarationType": "HELP",
                  "Text": "\"En cas de départ puis de retour dans le logement, choisir la date de la dernière arrivée\"",
                  "id": "l1atz7au",
                  "position": "AFTER_QUESTION_TEXT",
                  "DeclarationMode": [
                    "CATI",
                    "CAPI",
                    "CAWI",
                    "PAPI"
                  ]
                }
              ],
              "type": "QuestionType",
              "questionType": "SIMPLE",
              "Name": "EMMENAGE"
            }
          ],
          "Name": "LGT"
        }
      ],
      "Name": "DESCR_LOG"
    },
    {
      "Control": [],
      "depth": 1,
      "FlowControl": [],
      "genericName": "MODULE",
      "Label": [
        "QUESTIONNAIRE_END"
      ],
      "id": "idendquest",
      "TargetMode": [
        "CAPI",
        "CATI",
        "CAWI",
        "PAPI"
      ],
      "Declaration": [],
      "type": "SequenceType",
      "Child": [],
      "Name": "QUESTIONNAIRE_END"
    }
  ]
}